$_colors-brown: ('brown': #5A4317, 'brown-lighten-1': #996E43, 'brown-lighten-2': #B6A999)
$_colors-white: ('white': #fff, 'white-darken-1': #f9f9f9, 'white-darken-2': #f5f5f5, 'white-darken-3': #dadcf3)
$_colors-black: ('black': #000, 'black-lighten-1': #1f1f1f)

$_colors-default: ('primary': #01213c, 'secondary': #DCA11D, 'accent': #364D6C, 'danger': #C1554E,  'grey': #eee, 'yellow': #f49221, 'link': #5BB5DF)

$_colors: map-merge(map-merge($_colors-default, $_colors-black), map-merge($_colors-white, $_colors-brown))

@function getColor($name, $opacity: 1)
  $value: map-get($_colors, $name)
  @if $value == null or $value == ''
    $value: $name

  @return rgba($value, $opacity)


@mixin color-text($color-name, $opacity: 1)
  color: getColor($color-name, $opacity)

@mixin color-background($color-name, $opacity: 1)
  background-color: getColor($color-name, $opacity)

@mixin color-border($color-name, $opacity: 1)
  border:
    width: 1px
    style: solid
    color: getColor($color-name, $opacity)

@mixin color-dynamic($property-names...)
  @content
  @each $property-name in $property-names
    #{$property-name}: getColor('primary')

  @each $key, $value in $_colors
    &\:#{$key}
      @content
      @each $property-name in $property-names
        @if $property-name == 'border-color'
          @include color-border($value)
        @else
          #{$property-name}: $value

